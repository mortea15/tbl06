<!DOCTYPE html>
<html>
<head>
    <title>TBL06 - Docker & API Demo</title>
    <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">
    <link rel="stylesheet" href="https://code.getmdl.io/1.3.0/material.indigo-blue.min.css"/>
    <link rel="stylesheet"
          href="https://fonts.googleapis.com/css?family=Roboto:regular,bold,italic,thin,light,bolditalic,black,medium&amp;lang=en">

    <!-- Viewport mobile tag for sensible mobile support -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">


    <!--
        Stylesheets and Preprocessors
        ==============================

        You can always bring in CSS files manually with `<link>` tags, or asynchronously
        using a solution like AMD (RequireJS).  Or, if you like, you can take advantage
        of Sails' conventional asset pipeline (boilerplate Gruntfile).

        By default, stylesheets from your `assets/styles` folder are included
        here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
        are supported. In production, your styles will be minified and concatenated into
        a single file.

        To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Change the order of your CSS files
            + Import stylesheets from other directories
            + Use a different or additional preprocessor, like SASS, SCSS or Stylus
    -->

    <!--STYLES-->
    <link rel="stylesheet" href="/styles/importer.css">
    <link rel="stylesheet" href="/styles/material/material.css">
    <link rel="stylesheet" href="/styles/material/material.min.css">
    <link rel="stylesheet" href="/styles/materialize/materialize.css">
    <link rel="stylesheet" href="/styles/style.css">
    <!--STYLES END-->
</head>

<body>
<style>
    .demo-layout-transparent {
        background: url('http://i.imgur.com/doc14qZ.jpg') center / cover;
    }

    .demo-layout-transparent .mdl-layout__header,
    .demo-layout-transparent .mdl-layout__drawer-button {
        /* This background is dark, so we set text to white. Use 87% black instead if
           your background is light. */
        color: white;
    }
</style>

<div class="demo-layout-transparent mdl-layout mdl-js-layout">
    <header class="mdl-layout__header mdl-layout__header--transparent">
        <div class="mdl-layout__header-row">
            <!-- Title -->
            <span class="mdl-layout-title">TBL06 - Docker & API Demo</span>
            <!-- Add spacer, to align navigation to the right -->
            <div class="mdl-layout-spacer"></div>
            <!-- Navigation -->
            <nav class="mdl-navigation">
                <% if (req.session.me) { %>
                <a class="mdl-navigation__link" href="/">Home</a>
                <% } else { %>
                <a class="mdl-navigation__link" href="/login">Sign In</a>
                <a class="mdl-navigation__link" href="/signup">Register</a>
                <a class="mdl-navigation__link" href="/">Home</a>
                <% } %>
                <div class="mdl-navigation__link mdl-textfield mdl-js-textfield mdl-textfield--expandable
                  mdl-textfield--floating-label mdl-textfield--align-right">
                    <label class="mdl-button mdl-js-button mdl-button--icon"
                           for="fixed-header-drawer-exp">
                        <i class="material-icons">search</i>
                    </label>
                    <div class="mdl-textfield__expandable-holder">
                        <input class="mdl-textfield__input" type="text" name="expSearch"
                               id="fixed-header-drawer-exp">
                    </div>
                </div>
            </nav>
        </div>
    </header>
    <div class="mdl-layout__drawer">
        <span class="mdl-layout-title">TBL06</span>
        <nav class="mdl-navigation">
            <% if (req.session.me) { %>
            <a class="mdl-navigation__link" href="/">Home</a>
            <% } else { %>
            <a class="mdl-navigation__link" href="/login">Sign In</a>
            <a class="mdl-navigation__link" href="/signup">Register</a>
            <a class="mdl-navigation__link" href="/">Home</a>
            <% } %>
        </nav>
    </div>
    <main class="mdl-layout__content">
        <%- body %>


        <!--
            Client-side Templates
            ========================

            HTML templates are important prerequisites of modern, rich client applications.
            To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
            that you load these templates client-side.

            By default, your Gruntfile is configured to automatically load and precompile
            client-side JST templates in your `assets/templates` folder, then
            include them here automatically (between TEMPLATES and TEMPLATES END).

            To customize this behavior to fit your needs, just edit `tasks/pipeline.js`.
            For example, here are a few things you could do:

                + Import templates from other directories
                + Use a different template engine (handlebars, jade, dust, etc.)
                + Internationalize your client-side templates using a server-side
                  stringfile before they're served.
        -->

        <!--TEMPLATES-->
        
        <!--TEMPLATES END-->


        <!--

          Client-side Javascript
          ========================

          You can always bring in JS files manually with `script` tags, or asynchronously
          on the client using a solution like AMD (RequireJS).  Or, if you like, you can
          take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

          By default, files in your `assets/js` folder are included here
          automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
          CoffeeScript (.coffee) are supported. In production, your scripts will be minified
          and concatenated into a single file.

          To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
          For example, here are a few things you could do:

              + Change the order of your scripts
              + Import scripts from other directories
              + Use a different preprocessor, like TypeScript

        -->

        <!--SCRIPTS-->
        <script src="/js/dependencies/sails.io.js"></script>
        <script src="/js/dependencies/auth.js"></script>
        <script src="/js/musixmatch.js"></script>
        <script src="/js/youtube.js"></script>
        <script src="/js/soundcloud.js"></script>
        <script src="/js/third-party/jquery-2.1.1.min.js"></script>
        <script src="/js/third-party/material.js"></script>
        <script src="/js/third-party/material.min.js"></script>
        <script src="/js/third-party/materialize.js"></script>
        <script src="/js/third-party/materialize.min.js"></script>
        <script src="/js/time_convertion.js"></script>
        <!--SCRIPTS END-->
    </main>
    <footer class="mdl-mini-footer">
        <div class="mdl-mini-footer__left-section">
            <div class="mdl-logo">TBL06 - Docker & API Demo</div>
        </div>
    </footer>
</div>
</body>
</html>
